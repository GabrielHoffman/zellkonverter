% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/konverter.R
\name{AnnData-Conversion}
\alias{AnnData-Conversion}
\alias{AnnData2SCE}
\alias{SCE2AnnData}
\title{Convert AnnData between and SingleCellExperiment}
\usage{
AnnData2SCE(adata, skip_assays = FALSE)

SCE2AnnData(sce, X_name = NULL)
}
\arguments{
\item{adata}{A \strong{reticulate} reference to a Python AnnData object.}

\item{skip_assays}{Logical scalar indicating whether to skip conversion of
any assays in \code{sce}, replacing them with empty sparse matrices instead.}

\item{sce}{A \linkS4class{SingleCellExperiment} object.}

\item{X_name}{Name of the assay to use as the primary matrix (\code{X}) of the
AnnData object. If \code{NULL}, the first assay of \code{sce} will be used by default.}
}
\value{
\code{AnnData2SCE()} will return a \linkS4class{SingleCellExperiment}
containing the equivalent data from \code{adata}.

\code{SCE2AnnData()} will return a \strong{reticulate} reference to an AnnData object
containing the content of \code{sce}.
}
\description{
Conversion between Python AnnData objects and
\linkS4class{SingleCellExperiment} objects.
}
\details{
These functions assume that an appropriate Python environment has already
been loaded. As such, they are largely intended for developer use, most
typically inside a \strong{basilisk} context.

The conversion is not entirely lossless:
\itemize{
\item No attempt is made by \code{AnnData2SCE()} to transfer the alternative
experiments (\code{\link[SingleCellExperiment:altExp]{altExp}}) from \code{sce} to an
AnnData object.
\item Values in the \code{obsm} field of \code{adata} are not transferred to a
\linkS4class{SingleCellExperiment}.
}

In \code{SCE2AnnData()}, matrices are converted to a \strong{numpy}-friendly format.
Sparse matrices are converted to \linkS4class{dgCMatrix} objects while all
other matrices are converted into ordinary matrices. If \code{skip_assays = TRUE},
empty sparse matrices are created instead and the user is expected to fill in
the assays on the Python side.

For \code{AnnData2SCE()}, an error is raised if there is no corresponding R format
for a matrix in the AnnData object. If \code{skip_assays = TRUE}, no error is
given and empty sparse matrices are created for each assay. The user is
expected to fill in the assays on the R side, see \code{\link[=readH5AD]{readH5AD()}} for an
example.

We attempt to convert between items in the \linkS4class{SingleCellExperiment}
\code{\link[=metadata]{metadata()}} slot and the \code{AnnData} \code{uns} slot. If an item cannot be
converted a warning will be raised.
}
\examples{
library(basilisk)
library(scRNAseq)
seger <- SegerstolpePancreasData()

# These functions are designed to be run inside
# a specified Python environment
roundtrip <- basiliskRun(fun = function(sce) {
     # Convert SCE to AnnData:
     adata <- SCE2AnnData(sce)

     # Maybe do some work in Python on 'adata':
     # BLAH BLAH BLAH

     # Convert back to an SCE:
     AnnData2SCE(adata)
}, env = zellkonverter:::anndata_env, sce = seger)

}
\seealso{
\code{\link[=writeH5AD]{writeH5AD()}} and \code{\link[=readH5AD]{readH5AD()}} for dealing directly with H5AD files.
}
\author{
Luke Zappia

Aaron Lun
}
