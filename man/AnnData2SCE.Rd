% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/konverter.R
\name{AnnData2SCE}
\alias{AnnData2SCE}
\alias{SCE2AnnData}
\title{AnnData to/from SingleCellExperiment}
\usage{
AnnData2SCE(adata, skip.assays = FALSE)

SCE2AnnData(sce, X_name = NULL)
}
\arguments{
\item{adata}{A \pkg{reticulate} reference to a Python AnnData object.}

\item{skip.assays}{Logical scalar indicating whether to skip conversion of any assays,
replacing them with empty sparse matrices instead.}

\item{sce}{A \linkS4class{SingleCellExperiment} object.}

\item{X_name}{Name of the assay to use as the primary matrix (\code{X}) of the AnnData object.
If \code{NULL}, the first assay of \code{sce} will be used by default.}
}
\value{
\code{AnnData2SCE} will return a SingleCellExperiment containing the equivalent data from \code{adata}.

\code{SCE2AnnData} will return a \pkg{reticulate} reference to an AnnData object containing the content of \code{sce}.
}
\description{
Converts a Python AnnData object to or from a \linkS4class{SingleCellExperiment} object.
}
\details{
These functions assume that an appropriate Python environment has already been loaded.
As such, they are largely intended for developer use, most typically inside a \pkg{basilisk} context.

The conversion is not entirely lossless.
No attempt is made by \code{AnnData2SCE} to transfer the alternative Experiments from \code{sce} to an AnnData object.
Conversely, values in the \code{obsm} field of \code{adata} are not transferred to a SingleCellExperiment.

In \code{SCE2AnnData}, matrices are converted to a \pkg{numpy}-friendly format.
Sparse matrices are converted to \linkS4class{dgCMatrix} objects while all other matrices are converted into ordinary matrices
If \code{skip.assays=TRUE}, empty sparse matrices are created instead;
the user is expected to fill in the assays on the Python side.

For \code{AnnData2SCE}, an error is raised if there is no corresponding R format for a matrix in the AnnData object.
Ff \code{skip.assays=TRUE}, no error is emittedd and empty sparse matrices are created for each assay.
The user is expected to fill in the assays on the R side, see \code{\link{readH5AD}} for an example.
}
\examples{
library(basilisk)
library(scRNAseq)
seger <- SegerstolpePancreasData()

# If you don't know what the code below is doing,
# you probably shouldn't be using these functions.
roundtrip <- basiliskRun(env=zellkonverter:::anndata_env, fun=function(sce) {
     # Convert SCE to AnnData:
     ad <- SCE2AnnData(sce) 

     # Maybe do some work in Python on 'ad':
     # BLAH BLAH BLAH

     # Convert back to an SCE:
     AnnData2SCE(ad)
}, sce=seger)

}
\seealso{
\code{\link{writeH5AD}} and \code{\link{readH5AD}}, for more user-friendly versions of these functions.
}
\author{
Luke Zappia
}
