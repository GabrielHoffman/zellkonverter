## This is a simplified action for building and testing a Bioconductor package
## based on https://github.com/lcolladotor/biocthis/blob/master/actions/check-bioc.yml
## and https://github.com/r-lib/actions/blob/master/examples/check-standard.yaml

name: R-CMD-check-bioc

## Specify which branches to run on
## The "master" branch corresponds to Bioc-devel and "RELEASE_X" branches are
## Bioconductor releases. See http://bioconductor.org/developers/how-to/git/.
on:
  push:
    branches:
      - master
      - 'RELEASE_*'
      - actions
  pull_request:
    branches:
      - master
      - 'RELEASE_*'
      - actions

jobs:
  get-bioc-release:
    runs-on: ubuntu-latest
    outputs:
      biocimage: ${{ steps.get-release.outputs.biocimage }}
      biocversion: ${{ steps.get-release.outputs.biocrelease }}
    steps:
      - id: get-release
        name: Get Bioconductor release
        run: |
          if echo "$GITHUB_REF" | grep -q "RELEASE_"; then
              biocrelease="$(basename -- $GITHUB_REF | tr '[:upper:]' '[:lower:]')"
          else
              biocrelease="devel"
          fi
          biocimage="bioconductor/bioconductor_docker:${biocrelease}"
          echo "Bioc release: ${biocrelease}"
          echo "Bioc docker image: {$biocimage}"
          ## Store the information
          echo "::set-output name=biocimage::${biocimage}"
          echo "::set-output name=biocrelease::${biocrelease}"

  get-bioc-version:
    runs-on: ubuntu-latest
    needs: get-bioc-release
    container:
      image: ${{ needs.get-bioc-release.outputs.biocimage }}
    outputs:
      Rversion: ${{ steps.info.set-versions.rversion }}
      biocversion: ${{ steps.info.set-versions.rversion }}
    steps:
      - id: get-versions
        name: Get Bioconductor/R versions
        run: |
          biocconfig <- "https://bioconductor.org/config.yaml"
          biocrelease <- ifelse(
            grepl("${{ needs.get-bioc-release.outputs.biocrelease }}", "release"),
            "release", "devel")
          biocmap <- BiocManager:::.version_map_get_online(biocconfig)
          biocversion <- subset(biocmap, BiocStatus == biocrelease)[, 'Bioc']
          rversion <- subset(biocmap, BiocStatus == biocrelease)[, 'R']
          writeLines(as.character(c(biocversion, rversion)),
                     "versions.txt")
          cat("SET VERSIONS", "\n")
          cat("Bioc release: ", biocrelease, "\n")
          cat("Bioc version: ", as.character(biocversion), "\n")
          cat("R version: ", as.character(rversion), "\n")
        shell: Rscript {0}
      - id: set-versions
        name: Set Bioconductor/R versions
        run: |
          biocversion=$(head -n 1 versions.txt)
          rversion=$(tail -n 1 versions.txt)
          echo "GET VERSIONS"
          echo "Bioc version: ${biocversion}"
          echo "R version: ${rversion}"
          ## Store the information
          echo "::set-output name=biocversion::${biocversion}"
          echo "::set-output name=rversion::${rversion}"

  R-CMD-check-bioc:
    name: ubuntu-latest (r-biocdocker bioc-${{ needs.get-bioc-release.outputs.biocrelease }})
    needs: [get-bioc-release, get-bioc-version]
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.get-bioc-release.outputs.biocimage }}
      volumes:
        - /home/runner/work/_temp/Library:/usr/local/lib/R/host-site-library
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      TZ: UTC
      NOT_CRAN: true
    steps:
      ## Related to https://github.com/rocker-org/rocker-versioned2/issues/52
      - name: Install latest git
        run: |
          ## git version provided
          git --version
          ## to be able to install software properties
          sudo apt-get update -y
          ## to be able to use add-apt-repository
          sudo apt-get install software-properties-common -y
          ## to use stable releases of git that are already in a PPA at
          ## https://launchpad.net/~git-core/+archive/ubuntu/candidate
          sudo add-apt-repository ppa:git-core/candidate -y
          ## Update
          sudo apt-get update -y
          ## Upgrade git and other tools
          sudo apt-get upgrade -y
          ## latest git version
          git --version
        shell: bash {0}
