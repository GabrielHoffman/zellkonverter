## This is a simplified action for building and testing a Bioconductor package
## based on https://github.com/lcolladotor/biocthis/blob/master/actions/check-bioc.yml
## and https://github.com/r-lib/actions/blob/master/examples/check-standard.yaml
## https://github.com/seandavi/BuildABiocWorkshop2020/blob/master/.github/workflows/basic_checks.yaml
name: R-CMD-check-bioc

## Specify which branches to run on
## The "master" branch corresponds to Bioc-devel and "RELEASE_X" branches are
## Bioconductor releases. See http://bioconductor.org/developers/how-to/git/.
on:
  push:
    branches:
      - master
      - 'RELEASE_*'
      - actions
  pull_request:
    branches:
      - master
      - 'RELEASE_*'
      - actions

jobs:
  R-CMD-check:
    runs-on: ubuntu-latest
    container: bioconductor/bioconductor_docker:devel
    steps:
      - uses: actions/checkout@v2

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE),
                  ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major,
                             getRversion()$minor),
                     ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE,
                                repos = BiocManager::repositories())
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          rcmdcheck::rcmdcheck(
            args = c("--no-manual"),
            error_on = "warning",
            check_dir = "check"
          )
        shell: Rscript {0}
